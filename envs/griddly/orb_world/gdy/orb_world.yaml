  Version: '0.1'
  Environment:
    Name: OrbWorld2
    Description: Metta - Foraging
    Variables:
      - Name: conf:orb:energy
        InitialValue: 50
      - Name: conf:orb_factory:cooldown
        InitialValue: 50

      - Name: conf:agent:initial_energy
        InitialValue: 100

      - Name: conf:cost:move
        InitialValue: 1
      - Name: conf:cost:rotate
        InitialValue: 1
      - Name: conf:cost:pickup
        InitialValue: 1
      - Name: conf:cost:use
        InitialValue: 1
      # toggle cost of shield
      - Name: conf:cost:shield
        InitialValue: 1
      # per-tick cost of shield
      - Name: conf:cost:shield:upkeep
        InitialValue: 1

      # prestige cost
      - Name: conf:cost:prestige
        InitialValue: 50
      # incremental increase in prestige cost
      - Name: conf:cost:prestige:margin
        InitialValue: 10

      - Name: conf:cost:attack
        InitialValue: 20

      - Name: conf:attack:damage
        InitialValue: 15
      - Name: conf:attack:freeze_duration
        InitialValue: 15

      # metrics
      - Name: stats:orbs:collected
        InitialValue: 0
        PerPlayer: true
      - Name: stats:orbs:used
        InitialValue: 0
        PerPlayer: true
      - Name: stats:orbs:spawned
        InitialValue: 0

      # ticks with shield on
      - Name: stats:agent:shield:ticks
        InitialValue: 0
        PerPlayer: true

      # prestige earned by agent
      - Name: stats:agent:prestige
        InitialValue: 0
        PerPlayer: true
      # max prestige by agent in episode
      - Name: stats:agent:prestige:max
        InitialValue: 0

      # action counts
      - Name: stats:action:move
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:rotate
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:use
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:pickup
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:shield
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:attack
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:prestige
        InitialValue: 0
        PerPlayer: true


      # energy use
      - Name: stats:energy:gained
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:move
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:rotate
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:use
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:pickup
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:attack
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:prestige
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:shield:upkeep
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:shield:defence
        InitialValue: 0
        PerPlayer: true

      # time spent frozen
      - Name: stats:agent:frozen:ticks
        InitialValue: 0
        PerPlayer: true

      # debug variables, used for webui
      - Name: debug:agent:energy
        InitialValue: 0
        PerPlayer: true
      - Name: debug:agent:frozen
        InitialValue: 0
        PerPlayer: true
      - Name: debug:agent:prestige
        InitialValue: 0
        PerPlayer: true
      - Name: debug:agent:shield
        InitialValue: 0
        PerPlayer: true

      # variables for controlling rendering
      - Name: render:agent:dir
        InitialValue: 0
        PerPlayer: true
      - Name: render:agent:tile
        InitialValue: 0
        PerPlayer: true

    Observers:
      VectorAgent:
        Type: VECTOR
        Width: 11
        Height: 11
        TrackAvatar: true
        IncludeVariables: true
        # IncludePlayerId: true
      GlobalSpriteObserver:
        TileSize: 16
        HighlightPlayers: true
        Type: SPRITE_2D
        Shader:
          ObserverAvatarMode: DARKEN
      GlobalBlockObserver:
        TileSize: 16
        Type: BLOCK_2D
        Shader:
          ObserverAvatarMode: GRAYSCALE
    Player:
      Count: 7
      AvatarObject: agent

    Levels:
      - >
        W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W
        W

        W   A1   .   .   .   .   .   .   .   A2  .   .   .   .   .   .   .   A3
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   o   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   o   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   A4   .   o   .   .   .   .   .   o   .   .   .   .   .   o   .   A5
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   o   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   o   .   .   o   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   A6   .   .   .   .   .   .   .   .   A7   .   .   .   .   .   .   .
        W

        W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W
        W

  Objects:
    - Name: wall
      MapCharacter: W
      Z: 1
      Observers:
        GlobalSpriteObserver:
          - TilingMode: WALL_16
            Image:
              - oryx/oryx_fantasy/wall2-0.png
              - oryx/oryx_fantasy/wall2-1.png
              - oryx/oryx_fantasy/wall2-2.png
              - oryx/oryx_fantasy/wall2-3.png
              - oryx/oryx_fantasy/wall2-4.png
              - oryx/oryx_fantasy/wall2-5.png
              - oryx/oryx_fantasy/wall2-6.png
              - oryx/oryx_fantasy/wall2-7.png
              - oryx/oryx_fantasy/wall2-8.png
              - oryx/oryx_fantasy/wall2-9.png
              - oryx/oryx_fantasy/wall2-10.png
              - oryx/oryx_fantasy/wall2-11.png
              - oryx/oryx_fantasy/wall2-12.png
              - oryx/oryx_fantasy/wall2-13.png
              - oryx/oryx_fantasy/wall2-14.png
              - oryx/oryx_fantasy/wall2-15.png

    - Name: orb_factory
      Z: 1
      MapCharacter: o
      Variables:
        - Name: orb_factory:ready
          InitialValue: 0
        - Name: orb_factory:mode
          InitialValue: 1
      Observers:
        GlobalSpriteObserver:
          - Image: oryx/oryx_fantasy/ore-0.png
          - Image: oryx/oryx_fantasy/ore-1.png
          - Image: oryx/oryx_fantasy/ore-2.png
          - Image: oryx/oryx_fantasy/ore-3.png
          - Image: oryx/oryx_fantasy/ore-4.png
          - Image: oryx/oryx_fantasy/ore-5.png
          - Image: oryx/oryx_fantasy/ore-6.png
      InitialActions:
        - Action: orb_factory:spawn
          ActionId: 1

    - Name: agent
      MapCharacter: A
      Z: 10
      Variables:
        - Name: agent:id
          InitialValue: 0
        - Name: agent:energy
          InitialValue: 0
        - Name: agent:prestige
          InitialValue: 0
        - Name: agent:inv:orbs
          InitialValue: 0
        - Name: agent:frozen
          InitialValue: 0
        - Name: agent:shield
          InitialValue: 0

      Observers:
        GlobalSpriteObserver:
          # Shield off
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_astronaut_d1.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_astronaut_l1.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_astronaut_r1.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_astronaut_u1.png
          # Shield on
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_beast_d1.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_beast_l1.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_beast_r1.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_beast_u1.png
          # Frozen
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_bug_u1.png

      InitialActions:
        - Action: agent:tick
          Delay: 1
          ActionId: 1
        - Action: agent:init
          ActionId: 1

  Actions:
    - Name: rotate
      InputMapping:
          Inputs:
            1:
              Description: Face down
              OrientationVector: [0, 1]
              MetaData:
                render_dir: 0
            2:
              Description: Face left
              OrientationVector: [-1, 0]
              MetaData:
                render_dir: 1
            3:
              Description: Face right
              OrientationVector: [1, 0]
              MetaData:
                render_dir: 2
            4:
              Description: Face Up
              OrientationVector: [0, -1]
              MetaData:
                render_dir: 3

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - gte: [ agent:energy, conf:cost:rotate ]
              - eq: [ agent:frozen, 0 ]
            Commands:
              - rot: _dir
              - set: [ render:agent:dir, meta.render_dir ]
              - sub: [ agent:energy, conf:cost:rotate ]
              - incr: stats:action:rotate
              - add: [ stats:energy:used:rotate, conf:cost:rotate ]
          Dst:
            Object: agent


    - Name: move
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, -1 ]
            Description: "move forward"
          2:
            VectorToDest: [ 0, 1 ]
            Description: "move backward"

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - gte: [ agent:energy, conf:cost:move ]
              - eq: [ agent:frozen, 0 ]
            Commands:
              - sub: [ agent:energy, conf:cost:move ]
              - incr: stats:action:move
              - add: [ stats:energy:used:move, conf:cost:move ]
              - mov: _dest
          Dst:
            Object: [ _empty ]

    - Name: pickup
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, -1 ]
            Description: "pickup object"
      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - and:
                - gte: [ agent:energy, conf:cost:pickup ]
                - eq: [ agent:frozen, 0 ]

                - eq: [ dst.orb_factory:ready, 1 ]
            Commands:
              - sub: [ agent:energy, conf:cost:pickup ]
              - incr: stats:action:pickup
              - add: [ stats:energy:used:pickup, conf:cost:pickup ]

              - add: [ agent:inv:orbs, 1 ]
              - incr: stats:orbs:collected
          Dst:
            Object: orb_factory
            Commands:
              - set_tile: 0
              - set: [ orb_factory:ready, 0 ]
              - exec:
                  Action: orb_factory:spawn
                  ActionId: 1
                  Delay: conf:orb_factory:cooldown

    - Name: use
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
            Description: "Consume"

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - and:
                - gte: [ agent:energy, conf:cost:use ]
                - eq: [ agent:frozen, 0 ]
                - gt: [ agent:inv:orbs, 0 ]
            Commands:
              - sub: [ agent:energy, conf:cost:use ]
              - incr: stats:action:use
              - add: [ stats:energy:used:use, conf:cost:use ]

              - decr: agent:inv:orbs
              - incr: stats:orbs:used
              - add: [ agent:energy, conf:orb:energy ]
              - add: [ stats:energy:gained, conf:orb:energy ]
          Dst:
            Object: agent

    - Name: shield
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
            Description: "Toggle Shield"

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - and:
                - eq: [ agent:frozen, 0 ]
            Commands:
              - if:
                    Conditions:
                      eq: [ agent:shield, 1 ]
                    OnTrue:
                      - set: [ agent:shield, 0 ]
                    OnFalse:
                      - set: [ agent:shield, 1 ]

              - incr: stats:action:shield
          Dst:
            Object: agent

    - Name: attack
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ -1, -1 ]
            Description: "attack 1"
          2:
            VectorToDest: [ 0, -1 ]
            Description: "attack 2"
          3:
            VectorToDest: [ 1, -1 ]
            Description: "attack 3"
          4:
            VectorToDest: [ -1, -2 ]
            Description: "attack 4"
          5:
            VectorToDest: [ 0, -2 ]
            Description: "attack 5"
          6:
            VectorToDest: [ 1, -2 ]
            Description: "attack 6"
          7:
            VectorToDest: [ -1, -3 ]
            Description: "attack 7"
          8:
            VectorToDest: [ 0, -3 ]
            Description: "attack 8"
          9:
            VectorToDest: [ 1, -3 ]
            Description: "attack 9"

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - and:
                - eq: [ agent:frozen, 0 ]
                - gte: [ agent:energy, conf:cost:attack ]
            Commands:
              - sub: [ agent:energy, conf:cost:attack ]
              - add: [ stats:energy:used:attack, conf:cost:attack ]
              - incr: stats:action:attack

          Dst:
            Object: agent
            Commands:
              - if:
                    Conditions:
                      eq: [ agent:shield, 1 ]
                    OnTrue:
                      - sub: [ agent:energy, conf:attack:damage ]
                      - add: [ stats:energy:used:shield:defence, conf:attack:damage ]
                      - if:
                          Conditions:
                            lt: [ agent:energy, 0 ]
                          OnTrue:
                            - set: [ agent:frozen, conf:attack:freeze_duration ]
                            - set: [ agent:shield, 0 ]
                            - set: [ agent:energy, 0 ]
                    OnFalse:
                      - set: [ agent:frozen, conf:attack:freeze_duration ]

              - incr: stats:action:shield


    - Name: prestige
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
            Description: "Increase Prestige"

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - and:
                - gte: [ agent:energy, conf:cost:prestige ]
                - eq: [ agent:frozen, 0 ]
            Commands:
              - incr: agent:prestige
              - sub: [ agent:energy, conf:cost:prestige ]
              - add: [ stats:energy:used:prestige, conf:cost:prestige ]
              - add: [ conf:cost:prestige, conf:cost:prestige:margin ]
              - reward: 1
          Dst:
            Object: agent

    - Name: agent:init
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
      Behaviours:
        - Src:
            Object: agent
          Dst:
            Object: agent
            Commands:
              - set: [ agent:id, _playerId ]
              - set: [ agent:energy, conf:agent:initial_energy ]

    - Name: agent:tick
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
      Behaviours:

        # Just repeat this action every time step
        - Src:
            Object: agent
          Dst:
            Object: agent
            Commands:
              - exec:
                  Action: agent:tick
                  ActionId: 1
                  Delay: 1

        # Handle Time Passing
        - Src:
            Object: agent
          Dst:
            Object: agent
            Commands:
              - incr: agent:energy
              - incr: [ stats:energy:gained ]

              - set: [ render:agent:tile, render:agent:dir ]

              # handle shield upkeep
              - if:
                  Conditions:
                    eq: [ agent:shield, 1 ]
                  OnTrue:
                    - sub: [ agent:energy, conf:cost:shield:upkeep ]
                    - add: [ stats:energy:used:shield:upkeep, conf:cost:shield ]
                    - incr: stats:agent:shield:ticks
                    - add: [ render:agent:tile, 4 ]

              # record number of steps spent frozen
              - if:
                  Conditions:
                      neq: [ agent:frozen, 0 ]
                  OnTrue:
                    - incr: stats:agent:frozen:ticks
                    - decr: agent:frozen
                    - set: [ render:agent:tile, 8 ]

              # update agent sprite
              - set_tile: render:agent:tile

              # keep track of max_prestige
              - if:
                  Conditions:
                    gt: [ agent:prestige, stats:agent:prestige:max ]
                  OnTrue:
                    - set: [ stats:agent:prestige:max,  agent:prestige ]

              # update debug variables
              - set: [ debug:agent:energy, agent:energy ]
              - set: [ debug:agent:prestige, agent:prestige ]
              - set: [ debug:agent:frozen, agent:frozen ]
              - set: [ debug:agent:shield, agent:shield ]


    - Name: orb_factory:spawn
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
      Behaviours:

        # Just repeat this action every time step
        - Src:
            Object: orb_factory
          Dst:
            Object: orb_factory
            Commands:
              - set: [orb_factory:ready, 1]
              - incr: [ stats:orbs:spawned ]
              - set_tile: 1
