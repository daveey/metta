  Version: '0.1'
  Environment:
    Name: PowerGrid
    Description: Metta - Foraging
    Variables:
      # Exploration Rewards
      - Name: stats:reward
        InitialValue: 0
        PerPlayer: true

      # Altar
      - Name: conf:altar:cost
        InitialValue: 50
      - Name: conf:altar:cooldown
        InitialValue: 2
      - Name: stats:action:use:altar
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:altar
        InitialValue: 0
        PerPlayer: true

      # Charger
      - Name: conf:charger:cooldown
        InitialValue: 2
      - Name: conf:charger:energy
        InitialValue: 50
      - Name: stats:action:use:charger
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:gained:charger
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:gained:charger:bonus
        InitialValue: 0
        PerPlayer: true

      # Generator
      - Name: conf:generator:cooldown
        InitialValue: 50
      - Name: stats:action:use:generator
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:use:generator:cursed
        InitialValue: 0
        PerPlayer: true
      - Name: stats:resource:collected
        InitialValue: 0
        PerPlayer: true

      # Agent Upkeep
      - Name: conf:agent:energy:regen
        InitialValue: 0
        PerPlayer: true
      - Name: conf:agent:energy:max
        InitialValue: 500
        PerPlayer: true
      - Name: conf:agent:energy:initial
        InitialValue: 100
      - Name: stats:energy:gained
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:gained:regen
        InitialValue: 0
        PerPlayer: true

      # Gift
      - Name: conf:gift:energy
        InitialValue: 10
        PerPlayer: true
      - Name: stats:action:gift:energy
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:gift:inv:1
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:gift:inv:2
        InitialValue: 0
        PerPlayer: true

      # No-Op
      - Name: stats:action:noop
        InitialValue: 0
        PerPlayer: true

      # Movement
      - Name: conf:cost:move
        InitialValue: 0
        PerPlayer: True
      - Name: conf:cost:move:prey
        InitialValue: 0
      - Name: conf:cost:move:predator
        InitialValue: 0
      - Name: stats:action:move
        InitialValue: 0
        PerPlayer: true
      - Name: conf:cost:jump
        InitialValue: 1
        PerPlayer: true
      - Name: stats:energy:used:move
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:jump
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:jump
        InitialValue: 0
        PerPlayer: true
      - Name: conf:cost:rotate
        InitialValue: 0
      - Name: stats:action:rotate
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:rotate
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:frozen
        InitialValue: 0
        PerPlayer: true
      - Name: stats:agent:frozen:ticks
        InitialValue: 0
        PerPlayer: true

      # Shield
      - Name: conf:cost:shield
        InitialValue: 0
      - Name: conf:cost:shield:upkeep
        InitialValue: 1
      - Name: stats:agent:shield:ticks
        InitialValue: 0
        PerPlayer: true
      - Name: stats:action:shield
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:shield:upkeep
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:shield:toggle
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:shield:defence
        InitialValue: 0
        PerPlayer: true

      # Attack
      - Name: conf:cost:attack
        InitialValue: 20
        PerPlayer: True
      - Name: conf:attack:damage
        InitialValue: 15
        PerPlayer: True
      - Name: conf:attack:freeze_duration
        InitialValue: 15
      - Name: conf:cost:frozen
        InitialValue: 0
        PerPlayer: True
      - Name: stats:action:attack
        InitialValue: 0
        PerPlayer: true
      - Name: stats:energy:used:attack
        InitialValue: 0
        PerPlayer: true
      - Name: stats:attack:defeat
        InitialValue: 0
        PerPlayer: true
      - Name: stats:attack:victory
        InitialValue: 0
        PerPlayer: true
      - Name: stats:attack:loot
        InitialValue: 0
        PerPlayer: true

      # Species
      - Name: stats:species:prey
        InitialValue: 0
        PerPlayer: true
      - Name: stats:species:predator
        InitialValue: 0
        PerPlayer: true

      # debug variables, used for webui
      - Name: debug:agent:energy
        InitialValue: 0
        PerPlayer: true
      - Name: debug:agent:inv:1
        InitialValue: 0
        PerPlayer: true
      - Name: debug:agent:inv:2
        InitialValue: 0
        PerPlayer: true
      - Name: debug:agent:inv:3
        InitialValue: 0
        PerPlayer: true

      # variables for controlling rendering
      - Name: render:agent:attacked
        InitialValue: 0
        PerPlayer: true
      - Name: render:agent:tile
        InitialValue: 0
        PerPlayer: true

      - Name: tmp:v1
        InitialValue: 0
      - Name: tmp:v2
        InitialValue: 0

    Observers:
      VectorAgent:
        Type: VECTOR
        Width: 11
        Height: 11
        TrackAvatar: true
        RotateWithAvatar: true
        IncludeVariables: true
        # IncludeRotation: true
      GlobalSpriteObserver:
        TileSize: 32
        Type: SPRITE_2D
        RotateAvatarImage: true
        BackgroundTile: oryx/oryx_fantasy/floor1-0.png
        Shader:
            ObjectVariables: [ agent:energy, agent:energy ]
            ObserverAvatarMode: DARKEN
    Player:
      Count: 7
      AvatarObject: agent

    Levels:
      - >
        W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W
        W

        W   A1   .   .   .   .   a   .   .   A2  .   .   .   .   .   .   .   A3
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   c   .   a   .   .   .   .   .   .   .   .   .
        W

        W   .   .   g   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   c   .   .   .   .   g   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   A4   .   g   .   .   .   .   .   g   .   .   .   .   .   g   .   A5
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   g   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   g   .   .   g   .   .   .   .   .
        W

        W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .
        W

        W   A6   .   .   .   .   .   .   .   .   A7   .   .   .   .   .   .   .
        W

        W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W
        W

  Objects:
    - Name: wall
      MapCharacter: W
      Z: 1
      Observers:
        GlobalSpriteObserver:
          - TilingMode: WALL_16
            Image:
              - oryx/oryx_fantasy/wall2-0.png
              - oryx/oryx_fantasy/wall2-1.png
              - oryx/oryx_fantasy/wall2-2.png
              - oryx/oryx_fantasy/wall2-3.png
              - oryx/oryx_fantasy/wall2-4.png
              - oryx/oryx_fantasy/wall2-5.png
              - oryx/oryx_fantasy/wall2-6.png
              - oryx/oryx_fantasy/wall2-7.png
              - oryx/oryx_fantasy/wall2-8.png
              - oryx/oryx_fantasy/wall2-9.png
              - oryx/oryx_fantasy/wall2-10.png
              - oryx/oryx_fantasy/wall2-11.png
              - oryx/oryx_fantasy/wall2-12.png
              - oryx/oryx_fantasy/wall2-13.png
              - oryx/oryx_fantasy/wall2-14.png
              - oryx/oryx_fantasy/wall2-15.png

    - Name: generator
      Z: 1
      MapCharacter: g
      Variables:
        - Name: generator:ready
          InitialValue: 0
        - Name: generator:resource
          InitialValue: 1
        - Name: generator:cursed
          InitialValue: 0
      Observers:
        GlobalSpriteObserver:
          - Image: oryx/oryx_fantasy/ore-0.png
          - Image: oryx/oryx_fantasy/ore-1.png
          - Image: oryx/oryx_fantasy/ore-2.png
          - Image: oryx/oryx_fantasy/ore-3.png
          - Image: oryx/oryx_fantasy/ore-4.png
          - Image: oryx/oryx_fantasy/ore-5.png
          - Image: oryx/oryx_fantasy/ore-6.png
      InitialActions:
        - Action: generator:init
          Randomize: True
        - Action: generator:reset
          Randomize: True

    - Name: charger
      Z: 1
      MapCharacter: c
      Variables:
        - Name: charger:ready
          InitialValue: 0
        - Name: charger:input:1
          InitialValue: 0
        - Name: charger:input:2
          InitialValue: 0
        - Name: charger:input:3
          InitialValue: 0
        - Name: charger:output
          InitialValue: 0
        - Name: charger:bonus
          InitialValue: 0
      Observers:
        GlobalSpriteObserver:
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_items/tg_items_pda_A.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_items/tg_items_pda_B.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_items/tg_items_pda_C.png
      InitialActions:
        - Action: charger:init
          Randomize: True
        - Action: charger:reset
          ActionId: 1

    - Name: altar
      Z: 1
      MapCharacter: a
      Variables:
        - Name: altar:ready
          InitialValue: 0
      Observers:
        GlobalSpriteObserver:
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_items/tg_items_heart_clear.png
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_items/tg_items_heart_full.png
      InitialActions:
        - Action: altar:init
          ActionId: 1
        - Action: altar:reset
          ActionId: 1

    - Name: agent
      MapCharacter: A
      Z: 10
      Variables:
        - Name: agent:id
          InitialValue: 0
        - Name: agent:dir
          InitialValue: 0
        - Name: agent:energy
          InitialValue: 0
        - Name: agent:shield
          InitialValue: 0
        - Name: agent:frozen
          InitialValue: 0

        - Name: agent:species
          InitialValue: 0

        - Name: agent:inv:1
          InitialValue: 0
        - Name: agent:inv:2
          InitialValue: 0
        - Name: agent:inv:3
          InitialValue: 0

      Observers:
        GlobalSpriteObserver:
          # Egg
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_void_d1.png

          # Species 1 (prey)
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_slime_u1.png
          # Shield on
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_larvae_u1.png
          # Frozen
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_void_d1.png
          # Attacked
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_stalker_u1.png

          # Species 2 (predator)
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_astronaut_u1.png
          # Shield on
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_beast_u1.png
          # Frozen
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_void_d1.png
          # Attacked
          - Image: oryx/oryx_tiny_galaxy/tg_sliced/tg_monsters/tg_monsters_stalker_u1.png

      InitialActions:
        - Action: agent:tick
          Delay: 1
          ActionId: 1
        - Action: agent:init
          Randomize: true

  Actions:
    - Name: rotate
      InputMapping:
          Inputs:
            1:
              Description: Face down
              OrientationVector: [0, 1]
              MetaData:
                dir: 1
            2:
              Description: Face left
              OrientationVector: [-1, 0]
              MetaData:
                dir: 2
            3:
              Description: Face right
              OrientationVector: [1, 0]
              MetaData:
                dir: 3
            4:
              Description: Face Up
              OrientationVector: [0, -1]
              MetaData:
                dir: 4

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - gte: [ agent:energy, conf:cost:rotate ]
              - eq: [ agent:frozen, 0 ]
            Commands:
              - rot: _dir
              - sub: [ agent:energy, conf:cost:rotate ]
              - incr: stats:action:rotate
              - add: [ stats:energy:used:rotate, conf:cost:rotate ]
              - set: [ agent:dir, meta.dir ]
          Dst:
            Object: agent


    - Name: move
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, -1 ]
            Description: "move forward"
          2:
            VectorToDest: [ 0, 1 ]
            Description: "move backward"
      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - gte: [ agent:energy, conf:cost:move ]
              - eq: [ agent:frozen, 0 ]
            Commands:
              - sub: [ agent:energy, conf:cost:move ]
              - incr: stats:action:move
              - add: [ stats:energy:used:move, conf:cost:move ]
              - mov: _dest
          Dst:
            Object: [ _empty ]

    # - Name: jump
    #   InputMapping:
    #     Relative: true
    #     Inputs:
    #       1:
    #         VectorToDest: [ 0, -1 ]
    #         Description: "jump forward"
    #   Behaviours:
    #     - Src:
    #         Object: agent
    #         Preconditions:
    #           - gte: [ agent:energy, conf:cost:jump ]
    #           - eq: [ agent:frozen, 0 ]
    #         Commands:
    #           - sub: [ agent:energy, conf:cost:jump ]
    #           - incr: stats:action:jump
    #           - add: [ stats:energy:used:jump, conf:cost:jump ]
    #           - mov: _dest
    #           - exec:
    #               Action: move
    #               ActionId: 1
    #       Dst:
    #         Object: [ _empty ]

    - Name: use
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, -1 ]
            Description: "use"
      Behaviours:
        # Use a generator
        - Src:
            Object: agent
            Preconditions:
              - and:
                - eq: [ agent:frozen, 0 ]
                - eq: [ dst.generator:ready, 1 ]
            Commands:
              - incr: stats:action:use:generator
              - incr: stats:resource:collected
              - if:
                  Conditions:
                      eq: [ dst.generator:resource, 1 ]
                  OnTrue:
                      - incr: agent:inv:1
              - if:
                  Conditions:
                      eq: [ dst.generator:resource, 2 ]
                  OnTrue:
                      - incr: agent:inv:2
              - if:
                  Conditions:
                      eq: [ dst.generator:resource, 3 ]
                  OnTrue:
                      - incr: agent:inv:3
              - if:
                  Conditions:
                      eq: [ dst.generator:cursed, 1 ]
                  OnTrue:
                      - sub: [ agent:energy, 50 ]
                      - incr: [ stats:action:use:generator:cursed ]
          Dst:
            Object: generator
            Commands:
              - set_tile: 0
              - set: [ generator:ready, 0 ]
              - exec:
                  Action: generator:reset
                  ActionId: generator:resource
                  Delay: conf:generator:cooldown

        # Use a charger
        - Src:
            Object: agent
            Preconditions:
              - and:
                - eq: [ agent:frozen, 0 ]
                - eq: [ dst.charger:ready, 1 ]
                - gte: [ agent:inv:1, dst.charger:input:1 ]
                - gte: [ agent:inv:2, dst.charger:input:2 ]
                - gte: [ agent:inv:3, dst.charger:input:3 ]
            Commands:
              - incr: stats:action:use:charger
              - sub: [ agent:inv:1, dst.charger:input:1 ]
              - sub: [ agent:inv:2, dst.charger:input:2 ]
              - sub: [ agent:inv:3, dst.charger:input:3 ]
              - add: [ agent:energy, dst.charger:output ]
              - add: [ stats:energy:gained, dst.charger:output ]
              - add: [ stats:energy:gained:charger, dst.charger:output ]
              - reward: dst.charger:output
              - add: [ stats:reward, dst.charger:output ]
              - if:
                  Conditions:
                      gt: [ dst.charger:bonus, 0 ]
                  OnTrue:
                    - add: [ stats:energy:gained:charger:bonus, dst.charger:bonus ]
          Dst:
            Object: charger
            Commands:
              - set_tile: 1
              - set: [ charger:ready, 0 ]
              - if:
                  Conditions:
                      gt: [ charger:bonus, 0 ]
                  OnTrue:
                    - set_tile: 2
              - exec:
                  Action: charger:reset
                  ActionId: 1
                  Delay: conf:charger:cooldown

        # Use Altar
        - Src:
            Object: agent
            Preconditions:
              - and:
                - eq: [ agent:frozen, 0 ]
                - eq: [ dst.altar:ready, 1 ]
                - gte: [ agent:energy, conf:altar:cost ]
            Commands:
              - reward: conf:altar:cost
              - reward: conf:altar:cost
              - add: [ stats:reward, conf:altar:cost ]
              - add: [ stats:reward, conf:altar:cost ]

              - incr: stats:action:use:altar
              - sub: [ agent:energy, conf:altar:cost ]
              - add: [ stats:energy:used:altar, conf:altar:cost ]
          Dst:
            Object: altar
            Commands:
              - set_tile: 1
              - set: [ altar:ready, 0 ]
              - exec:
                  Action: altar:reset
                  ActionId: 1
                  Delay: conf:altar:cooldown

    - Name: gift
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, -1 ]
            Description: "gift energy"
            MetaData:
              gift: 1
          2:
            VectorToDest: [ 0, -1 ]
            Description: "gift inv 1"
            MetaData:
              gift: 2
          3:
            VectorToDest: [ 0, -1 ]
            Description: "gift inv 2"
            MetaData:
              gift: 3
      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - and:
                - eq: [ agent:frozen, 0 ]
            Commands:
                # Energy
                - if:
                    Conditions:
                      and:
                        - eq: [ meta.gift, 1 ]
                        - gte: [ agent:energy, conf:gift:energy ]
                    OnTrue:
                      - add: [ dst.agent:energy, conf:gift:energy ]
                      - sub: [ agent:energy, conf:gift:energy ]
                      - incr: stats:action:gift:energy
                # Resource 1
                - if:
                    Conditions:
                      and:
                        - eq: [ meta.gift, 2 ]
                        - gte: [ agent:inv:1, 1 ]
                    OnTrue:
                      - add: [ dst.agent:inv:1, 1 ]
                      - sub: [ agent:inv:1, 1 ]
                      - incr: stats:action:gift:inv:1
                # Resource 2
                - if:
                    Conditions:
                      and:
                        - eq: [ meta.gift, 3 ]
                        - gte: [ agent:inv:2, 1 ]
                    OnTrue:
                      - add: [ dst.agent:inv:2, 1 ]
                      - sub: [ agent:inv:2, 1 ]
                      - incr: stats:action:gift:inv:2
                # # Resource 3
                # - if:
                #   Conditions:
                #     and:
                #       - eq: [ meta.gift, 1 ]
                #       - gt: [ agent:inv:3, 1 ]
                #   OnTrue:
                #     - add: [ dst.agent:inv:3, 1 ]
                #     - sub: [ agent:inv:3, 1 ]
                #     - incr: stats:action:gift:inv:3

          Dst:
            Object: agent

    - Name: shield
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
            Description: "Toggle Shield"

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - and:
                - eq: [ agent:frozen, 0 ]
                - gte: [ agent:energy, conf:cost:shield ]
            Commands:
              - if:
                    Conditions:
                      eq: [ agent:shield, 1 ]
                    OnTrue:
                      - set: [ agent:shield, 0 ]
                    OnFalse:
                      - sub: [ agent:energy, conf:cost:shield ]
                      - add: [ stats:energy:used:shield:toggle, conf:cost:shield ]
                      - set: [ agent:shield, 1 ]

              - incr: stats:action:shield
          Dst:
            Object: agent

    - Name: attack
      InputMapping:
        Relative: true
        Inputs:
          1:
            VectorToDest: [ -1, -1 ]
            Description: "attack 1"
          2:
            VectorToDest: [ 0, -1 ]
            Description: "attack 2"
          3:
            VectorToDest: [ 1, -1 ]
            Description: "attack 3"
          4:
            VectorToDest: [ -1, -2 ]
            Description: "attack 4"
          5:
            VectorToDest: [ 0, -2 ]
            Description: "attack 5"
          6:
            VectorToDest: [ 1, -2 ]
            Description: "attack 6"
          7:
            VectorToDest: [ -1, -3 ]
            Description: "attack 7"
          8:
            VectorToDest: [ 0, -3 ]
            Description: "attack 8"
          9:
            VectorToDest: [ 1, -3 ]
            Description: "attack 9"

      Behaviours:
        - Src:
            Object: agent
            Preconditions:
              - and:
                - eq: [ agent:frozen, 0 ]
                - gte: [ agent:energy, conf:cost:attack ]
            Commands:
              - sub: [ agent:energy, conf:cost:attack ]
              - add: [ stats:energy:used:attack, conf:cost:attack ]
              - incr: stats:action:attack
              - if:
                  Conditions:
                      or:
                        - eq: [ dst.agent:shield, 0 ]
                        - lt: [ dst.agent:energy, conf:attack:damage ]
                  OnTrue:
                      - add: [ agent:inv:1, dst.agent:inv:1 ]
                      - add: [ stats:attack:loot, dst.agent:inv:1 ]
                      - add: [ agent:inv:2, dst.agent:inv:2 ]
                      - add: [ stats:attack:loot, dst.agent:inv:2 ]
                      - add: [ agent:inv:3, dst.agent:inv:3 ]
                      - add: [ stats:attack:loot, dst.agent:inv:3 ]
                      - incr: [ stats:attack:victory ]
                      - set: [ dst.agent:shield, 0 ]
                      - set: [ dst.agent:energy, 0 ]
                      - set: [ dst.agent:inv:1, 0 ]
                      - set: [ dst.agent:inv:2, 0 ]
                      - set: [ dst.agent:inv:3, 0 ]
          Dst:
            Object: agent
            Commands:
              - if:
                  Conditions:
                      or:
                        - eq: [ agent:shield, 0 ]
                        - lt: [ agent:energy, conf:attack:damage ]
                  OnTrue:
                    - incr: stats:attack:defeat
                    - set: [ agent:frozen, conf:attack:freeze_duration ]

                  OnFalse:
                    - sub: [ agent:energy, src.conf:attack:damage ]
                    - add: [ stats:energy:used:shield:defence, src.conf:attack:damage ]
                    - set: [ render:agent:attacked, 2 ]

    - Name: agent:init
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
      Behaviours:
        - Src:
            Object: agent
          Dst:
            Object: agent
            Commands:
              - set: [ agent:id, _playerId ]
              - set: [ agent:energy, conf:agent:energy:initial ]
              - exec:
                  Action: agent:change_species
                  Randomize: True

    - Name: agent:change_species
      InputMapping:
        Internal: true
        Inputs:
          # 1:
          #   VectorToDest: [ 0, 0 ]
          #   MetaData:
          #     species: 1
          2:
            VectorToDest: [ 0, 0 ]
            MetaData:
              species: 2
      Behaviours:
        - Src:
            Object: agent
          Dst:
            Object: agent
            Commands:
              - set: [ agent:species, meta.species ]

              # Prey
              - if:
                  Conditions:
                      eq: [ meta.species, 1 ]
                  OnTrue:
                      - incr: stats:species:prey
                      - set: [ conf:cost:move, conf:cost:move:prey ]
                      - set: [ conf:agent:energy:max, 50 ]
                      - set: [ conf:cost:attack, 1000 ]
                      - set: [ conf:cost:jump, 1000 ]
                      - set: [ conf:cost:shield:upkeep, 2 ]

              # Predator
              - if:
                  Conditions:
                      eq: [ meta.species, 2 ]
                  OnTrue:
                      - incr: stats:species:predator
                      - set: [ conf:cost:move, conf:cost:move:predator ]

    - Name: agent:tick
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
      Behaviours:
        # Handle Time Passing
        - Src:
            Object: agent
          Dst:
            Object: agent
            Commands:
              - add: [ agent:energy, conf:agent:energy:regen ]
              - add: [ stats:energy:gained, conf:agent:energy:regen ]
              - add: [ stats:energy:gained:regen, conf:agent:energy:regen ]
              - reward: conf:agent:energy:regen
              - add: [ stats:reward, conf:agent:energy:regen ]

              - set: [ render:agent:tile, 0]

              # handle shield upkeep
              - if:
                  Conditions:
                    eq: [ agent:shield, 1 ]
                  OnTrue:
                    - sub: [ agent:energy, conf:cost:shield:upkeep ]
                    - add: [ stats:energy:used:shield:upkeep, conf:cost:shield:upkeep ]
                    - incr: stats:agent:shield:ticks
                    - set: [ render:agent:tile, 1 ]

              # record number of steps spent frozen
              - if:
                  Conditions:
                      neq: [ agent:frozen, 0 ]
                  OnTrue:
                    - incr: stats:agent:frozen:ticks
                    - sub: [ agent:energy, conf:cost:frozen ]
                    - add: [ stats:energy:used:frozen, conf:cost:frozen ]
                    - decr: agent:frozen
                    - set: [ render:agent:tile, 2 ]

              - if:
                  Conditions:
                      neq: [ render:agent:attacked, 0 ]
                  OnTrue:
                    - decr: render:agent:attacked
                    - set_tile: 3
                    - set: [ render:agent:tile, 3 ]

              # maintain positive energy
              - if:
                  Conditions:
                    lt: [ agent:energy, 0 ]
                  OnTrue:
                    - set: [ agent:energy, 0 ]

              # maintain max energy
              - if:
                  Conditions:
                    gt: [ agent:energy, conf:agent:energy:max ]
                  OnTrue:
                    - set: [ agent:energy, conf:agent:energy:max ]

              # render the agent tile
              - if:
                  Conditions:
                    eq: [ agent:species, 1 ]
                  OnTrue:
                    - add: [ render:agent:tile, 1 ]
              - if:
                  Conditions:
                    eq: [ agent:species, 2 ]
                  OnTrue:
                    - add: [ render:agent:tile, 5 ]

              - set_tile: render:agent:tile

              # update debug variables
              - set: [ debug:agent:energy, agent:energy ]
              - set: [ debug:agent:inv:1, agent:inv:1 ]
              - set: [ debug:agent:inv:2, agent:inv:2 ]
              - set: [ debug:agent:inv:3, agent:inv:3 ]

              - exec:
                  Action: agent:tick
                  ActionId: 1
                  Delay: 1

    - Name: generator:init
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
            MetaData:
              cursed: 0
          2:
            VectorToDest: [ 0, 0 ]
            MetaData:
              cursed: 1
      Behaviours:
        - Src:
            Object: generator
          Dst:
            Object: generator
            Commands:
              - set: [ generator:cursed, meta.cursed ]

    - Name: generator:reset
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
            MetaData:
              mode: 1
          2:
            VectorToDest: [ 0, 0 ]
            MetaData:
              mode: 2
          # 3:
          #   VectorToDest: [ 0, 0 ]
          #   MetaData:
          #     mode: 3
      Behaviours:
        - Src:
            Object: generator
          Dst:
            Object: generator
            Commands:
              - set: [ generator:resource, meta.mode ]
              - set: [ generator:ready, 1 ]
              - set_tile: generator:resource

    - Name: charger:init
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
            MetaData:
              i1: 1
              i2: 0
              i3: 0
              bonus: 0
          2:
            VectorToDest: [ 0, 0 ]
            MetaData:
              i1: 0
              i2: 1
              i3: 0
              bonus: 0
          # 3:
          #   VectorToDest: [ 0, 0 ]
          #   MetaData:
          #     i1: 0
          #     i2: 0
          #     i3: 1
          #     output: 100
          4:
            VectorToDest: [ 0, 0 ]
            MetaData:
              i1: 1
              i2: 1
              i3: 0
              bonus: 1
      Behaviours:
        - Src:
            Object: charger
          Dst:
            Object: charger
            Commands:
              - set: [ charger:input:1, meta.i1 ]
              - set: [ charger:input:2, meta.i2 ]
              - set: [ charger:input:3, meta.i3 ]
              - set: [ charger:output, conf:charger:energy ]
              - if:
                  Conditions:
                      eq: [ meta.bonus, 1 ]
                  OnTrue:
                    - add: [ charger:output, conf:charger:energy ]
                    - add: [ charger:output, conf:charger:energy ]
                    - set: [ charger:bonus, conf:charger:energy ]

    - Name: charger:reset
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
      Behaviours:
        - Src:
            Object: charger
          Dst:
            Object: charger
            Commands:
              - set: [ charger:ready, 1 ]
              - set_tile: 0

    - Name: altar:init
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
      Behaviours:
        - Src:
            Object: altar
          Dst:
            Object: altar

    - Name: altar:reset
      InputMapping:
        Internal: true
        Inputs:
          1:
            VectorToDest: [ 0, 0 ]
      Behaviours:
        - Src:
            Object: altar
          Dst:
            Object: altar
            Commands:
              - set: [ altar:ready, 1 ]
              - set_tile: 0

